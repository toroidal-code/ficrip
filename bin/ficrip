#!/usr/bin/env ruby

require 'bundler/setup'
require 'slop'
require 'ruby-progressbar'
require 'ficrip'

opts = Slop.new do
  banner = "usage: #{$0} [options] [<storyid/url>...]"
  on '--epub2', 'generate strict EPUB2 files instead of EPUB3 (e.g. for Google Play)'
  on '--verbose', 'enable verbose mode'
  on '-q', '--quiet', 'suppress output (quiet mode)'
  on '-v', '--version', 'print the version' do
    puts Ficrip::VERSION
    exit
  end
  on '-h', '--help' do
    puts o
    exit
  end
end

args = opts.parse! ARGV

if args.empty?
  puts opts
  exit -1
end

storyids = args.map do |a|
  if a =~ Regexp.new('fanfiction.net/s/(\d+)', true)
    Integer $1
  else
    begin
      Integer a
    rescue ArgumentError
      $stderr.puts "Error! \"#{a}\" is not a valid fanfiction.net URL or StoryID"
      $errored = true
    end
  end
end

exit -1 if $errored

storyids.each_with_index do |storyid, idx|
  prefix      = (storyids.count > 1) ? "(#{idx + 1}/#{storyids.count}): " : ''
  progressbar = ProgressBar.create(format:         prefix + "#{storyid}... Loading",
                                   progress_mark:  '#',
                                   remainder_mark: '-')

  fic = Ficrip.fetch storyid

  author_title = "#{fic.author} - #{fic.title}"

  progressbar.total = fic.chapters.count
  progressbar.format = prefix + "#{author_title} | %a [%B] %p%% (%c/%C)"


  epub = fic.bind(version: opts[:epub2] ? 2 : 3, callback: lambda { progressbar.increment })

  progressbar.format = prefix + "#{author_title}... Binding"
  filename = File.join(Dir.pwd, "#{author_title}.epub")
  epub.generate_epub filename

  progressbar.format = prefix + "#{author_title}... Done!"
end
